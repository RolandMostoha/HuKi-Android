apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-kapt'
apply plugin: 'dagger.hilt.android.plugin'
apply plugin: 'com.google.gms.google-services'
apply plugin: 'com.google.firebase.crashlytics'
apply from: "$project.rootDir/buildscripts/versions.gradle"

android {
    namespace 'hu.mostoha.mobile.android.huki'

    compileSdk 34

    defaultConfig {
        applicationId "hu.mostoha.mobile.android.huki"
        minSdk 26
        targetSdk 34
        versionCode gitVersionCode
        versionName gitVersionName
        buildConfigField("String", "GRAPHHOPPER_API_KEY", getGraphhopperApiKey())
        resourceConfigurations += ["en", "hu"]

        testInstrumentationRunner "hu.mostoha.mobile.android.huki.HiltTestRunner"
        testInstrumentationRunnerArguments clearPackageData: 'true'
    }

    buildFeatures {
        viewBinding true
    }

    buildTypes {
        debug {
            applicationIdSuffix '.debug'
            manifestPlaceholders = [
                    appNameHuki      : "@string/huki_app_name_debug",
                    appIcon          : "@mipmap/ic_launcher_debug",
                    analyticsDisabled: true,
            ]
            archivesBaseName = "HuKi_${defaultConfig.versionName}_${defaultConfig.versionCode}"
            firebaseCrashlytics {
                mappingFileUploadEnabled false
            }
        }
        release {
            manifestPlaceholders = [
                    appNameHuki      : "@string/huki_app_name",
                    appIcon          : "@mipmap/ic_launcher",
                    analyticsDisabled: false,
            ]
            archivesBaseName = "HuKi_${defaultConfig.versionName}_${defaultConfig.versionCode}"
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            firebaseCrashlytics {
                mappingFileUploadEnabled true
            }
        }
    }

    sourceSets {
        main {
            res.srcDirs = ['src/main/res', 'src/main/res_symbols']
        }
    }

    testOptions {
        execution 'ANDROIDX_TEST_ORCHESTRATOR'
        packagingOptions {
            jniLibs {
                useLegacyPackaging true
            }
        }
    }

    packagingOptions {
        resources {
            excludes += [
                    'META-INF/AL2.0',
                    'META-INF/LGPL2.1',
                    'META-INF/LICENSE.md',
                    'META-INF/LICENSE-notice.md'
            ]
        }
    }

    lint {
        abortOnError true
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])

    implementation project(':osm-overpasser')

    // Kotlin
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlinVersion"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:1.7.3"

    // Design
    implementation "androidx.constraintlayout:constraintlayout:2.1.4"
    implementation "com.google.android.material:material:1.12.0"
    implementation "androidx.appcompat:appcompat:1.7.0"
    implementation "com.github.douglasjunior:android-simple-tooltip:1.1.0"
    implementation "com.github.skydoves:powermenu:2.2.4"

    // Animations
    implementation 'jp.wasabeef:recyclerview-animators:4.0.2'

    // Hilt
    def jetpackHiltVersion = "1.0.0"
    implementation "com.google.dagger:hilt-android:$hiltVersion"
    kapt "com.google.dagger:hilt-android-compiler:$hiltVersion"
    kapt "androidx.hilt:hilt-compiler:$jetpackHiltVersion"

    // KTX
    implementation "androidx.core:core-ktx:1.13.1"
    def activityKtxVersion = "1.9.1"
    implementation "androidx.activity:activity-ktx:$activityKtxVersion"
    def fragmentKtxVersion = "1.8.2"
    implementation "androidx.fragment:fragment-ktx:$fragmentKtxVersion"
    def lifecycleVersion = "2.8.4"
    implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:$lifecycleVersion"
    implementation "androidx.lifecycle:lifecycle-runtime-ktx:$lifecycleVersion"

    // Preferences
    implementation "androidx.datastore:datastore-preferences:1.1.1"

    // Google Play Services Location
    implementation "com.google.android.gms:play-services-location:21.3.0"

    // GPX
    implementation 'com.github.ticofab:android-gpx-parser:2.3.0'
    implementation 'com.codebutchery.android:gpx_lib:1.0.3'

    // OSM
    implementation 'org.osmdroid:osmdroid-android:6.1.14'

    // Network
    def moshiVersion = '1.15.1'
    implementation "com.squareup.retrofit2:retrofit:2.10.0"
    implementation "com.squareup.retrofit2:converter-moshi:2.10.0"
    implementation "com.squareup.okhttp3:logging-interceptor:5.0.0-alpha.6"
    implementation "com.squareup.moshi:moshi-kotlin:$moshiVersion"
    kapt "com.squareup.moshi:moshi-kotlin-codegen:$moshiVersion"

    // AWS
    def awsVersion = '2.14.5'
    implementation "com.amplifyframework:core:$awsVersion"
    implementation "com.amplifyframework:aws-storage-s3:$awsVersion"
    implementation "com.amplifyframework:aws-auth-cognito:$awsVersion"
    coreLibraryDesugaring 'com.android.tools:desugar_jdk_libs:2.0.4'

    // Room
    def room_version = "2.6.1"
    implementation "androidx.room:room-runtime:$room_version"
    implementation "androidx.room:room-ktx:$room_version"
    annotationProcessor "androidx.room:room-compiler:$room_version"
    kapt "androidx.room:room-compiler:$room_version"

    // Logging
    implementation "com.jakewharton.timber:timber:5.0.1"

    // Analytics + Crashlytics
    implementation "com.google.firebase:firebase-analytics-ktx:22.0.2"
    implementation "com.google.firebase:firebase-crashlytics-ktx:19.0.3"

    // Licenses
    implementation 'com.github.marcoscgdev:Licenser:2.0.0'

    // Unit tests
    testImplementation project(":test-data")

    def mockKVersion = '1.13.10'
    def kotlinCoroutineTestVersion = '1.6.4'
    def googleTruthVersion = '1.1.3'
    testImplementation "junit:junit:4.13.2"
    testImplementation "com.google.truth:truth:$googleTruthVersion"
    testImplementation "io.mockk:mockk:$mockKVersion"
    testImplementation "androidx.arch.core:core-testing:2.2.0"
    testImplementation "org.jetbrains.kotlinx:kotlinx-coroutines-test:$kotlinCoroutineTestVersion"
    testImplementation 'app.cash.turbine:turbine:0.12.0'

    // Instrumentation tests
    androidTestImplementation project(":test-data")

    def androidTestVersion = "1.5.0-rc01"
    def androidExtTestVersion = "1.1.3"
    def espressoVersion = "3.4.0"
    androidTestImplementation "androidx.test.espresso:espresso-core:$espressoVersion"
    androidTestImplementation "androidx.test.espresso:espresso-intents:$espressoVersion"
    androidTestImplementation "androidx.test.espresso:espresso-contrib:3.3.0"
    androidTestImplementation "com.google.truth:truth:$googleTruthVersion"
    androidTestImplementation "androidx.test.ext:junit:$androidExtTestVersion"
    androidTestImplementation "androidx.test.ext:junit-ktx:$androidExtTestVersion"
    androidTestImplementation "androidx.test:core-ktx:$androidTestVersion"
    androidTestImplementation "androidx.test:rules:$androidTestVersion"
    androidTestImplementation "androidx.test:runner:$androidTestVersion"
    androidTestImplementation "org.jetbrains.kotlinx:kotlinx-coroutines-test:$kotlinCoroutineTestVersion"

    androidTestImplementation "io.mockk:mockk-android:$mockKVersion"
    androidTestImplementation 'app.cash.turbine:turbine:0.12.0'

    androidTestImplementation "com.google.dagger:hilt-android-testing:$hiltVersion"
    kaptAndroidTest "com.google.dagger:hilt-android-compiler:$hiltVersion"

    androidTestUtil "androidx.test:orchestrator:1.5.0"
}

kapt {
    correctErrorTypes true
}

String getGraphhopperApiKey() {
    def propFile = rootProject.file("./local.properties")
    def properties = new Properties()
    properties.load(new FileInputStream(propFile))
    return properties['GRAPHHOPPER_API_KEY']
}
