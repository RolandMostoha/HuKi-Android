name: Build and Verify

on:
  push:
    branches:
      - master

jobs:
  lint:
    runs-on: [ ubuntu-latest ]
    steps:
      - uses: actions/checkout@v2

      - name: Lint check
        run: ./gradlew lint

  unit_tests:
    runs-on: [ ubuntu-latest ]
    steps:
      - uses: actions/checkout@v2

      - name: Unit tests
        run: ./gradlew test

  #  android_tests:
  #    runs-on: [ macos-latest ]
  #    steps:
  #      - uses: actions/checkout@v2
  #      - uses: actions/setup-java@v2
  #        with:
  #          distribution: 'temurin'
  #          java-version: '11'
  #
  #      - name: Instrumentation Tests
  #        uses: reactivecircus/android-emulator-runner@v2
  #        with:
  #          api-level: 29
  #          script: ./gradlew connectedAndroidTest

  release:
    needs: [ lint, unit_tests ]
    runs-on: [ ubuntu-latest ]
    steps:
      - name: Checkout code with history
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Generate Release Bundle AAB
        run: ./gradlew app:bundleRelease

      - name: Set artifact names to ENV
        id: set_artifact_names
        run: |
          ARTIFACT_PATHNAME_AAB=$(ls app/build/outputs/bundle/release/*.aab | head -n 1)
          ARTIFACT_NAME_AAB=$(basename $ARTIFACT_PATHNAME_AAB)
          echo "ARTIFACT_NAME_AAB is " ${ARTIFACT_NAME_AAB}
          echo "ARTIFACT_PATHNAME_AAB=${ARTIFACT_PATHNAME_AAB}" >> $GITHUB_ENV
          echo "ARTIFACT_NAME_AAB=${ARTIFACT_NAME_AAB}" >> $GITHUB_ENV

      - name: Sign AAB
        uses: r0adkll/sign-android-release@v1
        id: sign_app
        with:
          releaseDirectory: app/build/outputs/bundle/release
          signingKeyBase64: ${{ secrets.SIGNING_KEY }}
          alias: ${{ secrets.ALIAS }}
          keyStorePassword: ${{ secrets.KEY_STORE_PASSWORD }}
          keyPassword: ${{ secrets.KEY_PASSWORD }}

      - uses: actions/upload-artifact@master
        with:
          name: ${{ env.ARTIFACT_NAME_AAB }}
          path: ${{ steps.sign_app.outputs.signedReleaseFile }}

      - uses: actions/upload-artifact@master
        with:
          name: mapping.txt
          path: app/build/outputs/mapping/release/mapping.txt

  deploy-play-store:
    needs: [ release ]
    runs-on: [ ubuntu-latest ]
    steps:
      - uses: actions/download-artifact@v2

      - name: Publish to Play Store internal test track
        uses: r0adkll/upload-google-play@v1
        with:
          serviceAccountJsonPlainText: ${{ secrets.SERVICE_ACCOUNT_JSON }}
          packageName: hu.mostoha.mobile.android.huki
          releaseFiles: ${{ env.ARTIFACT_PATHNAME_AAB }}
          track: internal
          whatsNewDirectory: assets/googlePlayStore/whatsnew
          mappingFile: mapping.txt
